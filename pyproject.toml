[tool.poetry]
name = "ct-iot-user-service"
version = "0.1.0"
description = ""
authors = ["Darryl Morton"]
readme = "README.md"
packages = [{include = "ct-iot-user-service", from="src"}]
repository = "https://github.com/darrylmorton/ct-iot-user-service.git"
keywords = ["ct", "iot", "user", "service"]

[tool.poetry.dependencies]
python = "^3.10"
fastapi = "^0.103.1"
uvicorn = {extras = ["standard"], version = "^0.23.2"}
python-dotenv = "^1.0.0"
sqlalchemy = "^2.0.22"
alembic = "^1.12.1"
greenlet = "^3.0.1"
async-sqlalchemy = "^1.0.0"
asyncpg = "^0.29.0"
psycopg2-binary = "^2.9.9"
psycopg = "^3.1.13"
bcrypt = "^4.1.1"
email-validator = "^2.1.0.post1"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
cryptography = "^41.0.7"

[tool.poetry.group.dev.dependencies]
trio = "^0.22.2"
ruff = "^0.1.1"

[tool.poetry.group.test]
[tool.poetry.group.test.dependencies]
httpx = "^0.25.0"
psycopg = "^3.1.13"
pytest = "^7.4.2"
pytest-asyncio = "^0.21.1"
pytest-postgresql = "^5.0.0"
psycopg-binary = "^3.1.13"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
preview = true
include = ["*.py", "*.pyi", "**/prproject.toml", "*.ipynb"]
line-length = 88  # defaults to 88 like black
target-version = "py310"  # the python version to target, useful when considering code upgrades, defaults to "py310"
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = ["E4", "E7", "E9", "F", "E"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
#magic-trailing-comma = "respect"

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.pytest.ini_options]
asyncio_mode = "auto"
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"