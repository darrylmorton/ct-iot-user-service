name: Tests

on:
  push:
    branches-ignore: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4
      - name: Set up python:wq
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-0  # increment to reset cache
      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
#      - name: Install dependencies
#        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
#        run: poetry install --no-interaction --no-root

      - name: Install project
        run: poetry install --no-interaction --no-root

      - name: Setup dependencies
        run: docker-compose up -d

      - name: Start application
        run: make run
        env:
#          ENVIRONMENT: "TEST"
#          SERVICE_NAME: "user-service"
#          APP_PORT: 8001
          DB_USERNAME: "postgres"
          DB_PASSWORD: "postgres"
          DB_HOST: "localhost"
          DB_PORT: 5432
          DB_NAME: "users"

      - name: Run unit tests
        run: make test-unit

      - name: Run integration tests
        run: make test-integration
#          source .venv/bin/activate
#          make test
#      - name: Run tests
#        run: |
#          poetry run pytest tests/
#          poetry run coverage report


#jobs:
#  test:
#    runs-on: ubuntu-latest
#    steps:
#      #----------------------------------------------
#      #       check-out repo and set-up python
#      #----------------------------------------------
#      - name: Check out repository
#        uses: actions/checkout@v4
#      - name: Set up python
#        id: setup-python
#        uses: actions/setup-python@v5
#        with:
#          python-version: '3.12'
#      #----------------------------------------------
#      #  -----  install & configure poetry  -----
#      #----------------------------------------------
#      - name: Install Poetry
#        uses: snok/install-poetry@v1
#        with:
#          version: 1.7.1
#          virtualenvs-create: true
#          virtualenvs-in-project: true
#          installer-parallel: true
#
#      #----------------------------------------------
#      #       load cached venv if cache exists
#      #----------------------------------------------
#      - name: Load cached venv
#        id: cached-poetry-dependencies
#        uses: actions/cache@v3
#        with:
#          path: .venv
#          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
#      #----------------------------------------------
#      # install dependencies if cache does not exist
#      #----------------------------------------------
#      - name: Install dependencies
#        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
#        run: poetry install --no-interaction --no-root
#      #----------------------------------------------
#      # install your root project, if required
#      #----------------------------------------------
##      - name: Install project
##        run: poetry install -vv --without local
#      #        run: poetry install --no-interaction
#      #----------------------------------------------
#      # docker compose
#      #----------------------------------------------
##      - name: Setup dependencies
##        run: docker-compose up -d
#      #----------------------------------------------
#      #              run test suite
#      #----------------------------------------------
##      - name: Run tests
##        run: |
##          source .venv/bin/activate
##          make test
