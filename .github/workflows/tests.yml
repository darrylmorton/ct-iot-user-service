name: Lint, Tests

on:
  push:
    branches-ignore: ["main"]

env:
  SENTRY_TRACES_SAMPLE_RATE: 1.0
  SENTRY_PROFILES_SAMPLE_RATE: 0.5
  SENTRY_SAMPLE_RATE: 50
  SERVICE_NAME: user-service
  LOG_LEVEL: DEBUG
  ENVIRONMENT: test
  UVICORN_HOST: 0.0.0.0
  UVICORN_PORT: 8002
  AUTH_SERVICE_HOST: local√èhost
  AUTH_SERVICE_PORT: 8001
  JWT_SECRET: ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789
  JWT_TOKEN_EXPIRY_SECONDS: 3600
  DB_USERNAME: postgres
  DB_PASSWORD: postgres
  DB_HOST: localhost
  DB_PORT: 5432
  DB_NAME: users

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up python:wq
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-0  # increment to reset cache

      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1

      - name: Install project
        run: poetry install

      - name: Run lint
        run: make lint

  unit-tests:
    runs-on: ubuntu-latest
    needs: [ lint ]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up python:wq
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-0  # increment to reset cache

      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1

      - name: Install project
        run: poetry install

      - name: Run unit tests
        run: make test-unit

  integration-tests:
    runs-on: ubuntu-latest
    needs: [ lint ]

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up python:wq
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local  # the path depends on the OS
          key: poetry-0  # increment to reset cache

      - name: Install Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1

      - name: Install project
        run: poetry install

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Setup dependencies
        run: docker-compose up -d

      - name: Sleep
        uses: kibertoad/wait-action@1.0.1
        with:
          time: '10s'

      - name: Run integration tests
        run: |
          make dev-server-start &
          make test-integration
